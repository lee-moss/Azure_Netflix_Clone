trigger:
batch: true
  branches:
    include:
    - main
  paths:
    include:
    - '*.tf'
    - '*.tfvars'
    - 'azure-pipelines.yml'
    
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: netflix-variables
  - name: TF_STATE_RG
    value: 'NetflixProject'
  - name: TF_STATE_STORAGE
    value: 'netflixstatefile'
  - name: TF_STATE_CONTAINER
    value: 'tfstate'

stages:
  - stage: Validate
    jobs:
      - job: ValidateAndPlan
        steps:
          - task: AzureCLI@2
            displayName: 'Configure Key Vault Access'
            inputs:
              azureSubscription: 'devOps-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Enable RBAC on Key Vault
                az keyvault update \
                  --name "NetflixSecret" \
                  --resource-group "NetflixProject" \
                  --enable-rbac-authorization true
                
                echo "Waiting for RBAC permissions to propagate..."
                sleep 60  # Wait 60 seconds

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devOps-connection'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'netflix.tfstate'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password"'

  - stage: Deploy
    condition: succeeded('Validate')
    jobs:
      - job: Apply
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'devOps-connection' 
              commandOptions: '-var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=$(admin_username_secret)"' 