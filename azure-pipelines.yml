trigger: none

pr:
  branches:
    include:
    - main
  paths:
    include:
    - '**/*.tf'
    - '**/*.tfvars'
    - 'azure-pipelines.yml'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: netflix-variables
  - name: TF_STATE_RG
    value: 'NetflixProject'
  - name: TF_STATE_STORAGE
    value: 'netflixstatefile'
  - name: TF_STATE_CONTAINER
    value: 'tfstate'

stages:
  - stage: Analysis
    displayName: 'Code Analysis'
    jobs:
      - job: CodeAnalysis
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'SonarCloud'
              organization: 'lam5'
              scannerMode: 'CLI'
              configMode: 'file'

          - task: SonarCloudAnalyze@1
            displayName: 'Run Analysis'

          - task: SonarCloudPublish@1
            displayName: 'Publish Quality Gate Result'
            inputs:
              pollingTimeoutSec: '300'

  - stage: Validate
    dependsOn: Analysis
    condition: succeeded('Analysis')
    jobs:
      - job: ValidateAndPlan
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devOps-connection'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'netflix.tfstate'
              commandOptions: '-upgrade'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password"'

  - stage: Deploy
    dependsOn: Validate
    condition: succeeded('Validate')
    jobs:
      - job: Apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devOps-connection'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'netflix.tfstate'
              commandOptions: '-upgrade'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password"'
