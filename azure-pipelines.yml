trigger: none

pr:
  branches:
    include:
    - main
  paths:
    include:
    - '**/*.tf'
    - '**/*.tfvars'
    - 'azure-pipelines.yml'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: netflix-variables
  - name: TF_STATE_RG
    value: 'NetflixProject'
  - name: TF_STATE_STORAGE
    value: 'netflixstatefile'
  - name: TF_STATE_CONTAINER
    value: 'tfstate'

stages:
  - stage: Analysis
    displayName: 'Code Analysis'
    jobs:
      - job: CodeAnalysis
        steps:
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'SonarQube'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'netflix-terraform'
              cliProjectName: 'Netflix Terraform'
              cliSources: '.'
              extraProperties: |
                sonar.exclusions=**/*.tfstate,**/.terraform/**/*
                sonar.terraform.file.suffixes=.tf,.tfvars
                sonar.sourceEncoding=UTF-8

          - task: SonarQubeAnalyze@5

          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'

  - stage: Validate
    dependsOn: Analysis
    condition: succeeded('Analysis')
    jobs:
      - job: ValidateAndPlan
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devOps-connection'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'netflix.tfstate'
              commandOptions: '-upgrade'
                        
          - task: TerraformTaskV4@4
            displayName: 'Import Resource Group'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_resource_group.netflix /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone'

          - task: TerraformTaskV4@4
            displayName: 'Import VNet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_virtual_network.vnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network'

          - task: TerraformTaskV4@4
            displayName: 'Import Storage Account'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_storage_account.tfstate /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Storage/storageAccounts/tfstatest'

          - task: TerraformTaskV4@4
            displayName: 'Import Management Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.management_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/management-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import DB Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.db_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/db-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import PE Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.pe_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/private-endpoints-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import Storage Container'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_storage_container.tfstate-con https://tfstatest.blob.core.windows.net/tfstate'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password"'

          - task: TerraformTaskV4@4
            displayName: 'Import AKS Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.aks_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/aks-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import Network Interface'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_network_interface.nic /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/networkInterfaces/vm1-nic'

  - stage: Deploy
    dependsOn: Validate
    condition: succeeded('Validate')
    jobs:
      - job: Apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'devOps-connection'
              backendAzureRmResourceGroupName: '$(TF_STATE_RG)'
              backendAzureRmStorageAccountName: '$(TF_STATE_STORAGE)'
              backendAzureRmContainerName: '$(TF_STATE_CONTAINER)'
              backendAzureRmKey: 'netflix.tfstate'
              commandOptions: '-upgrade'

          - task: TerraformTaskV4@4
            displayName: 'Import Resource Group'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_resource_group.netflix /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone'

          - task: TerraformTaskV4@4
            displayName: 'Import VNet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_virtual_network.vnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network'

          - task: TerraformTaskV4@4
            displayName: 'Import Storage Account'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_storage_account.tfstate /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Storage/storageAccounts/tfstatest'

          - task: TerraformTaskV4@4
            displayName: 'Import Management Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.management_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/management-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import DB Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.db_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/db-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import PE Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.pe_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/private-endpoints-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import Storage Container'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_storage_container.tfstate-con https://tfstatest.blob.core.windows.net/tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Import AKS Subnet'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_subnet.aks_subnet /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/virtualNetworks/netflix-network/subnets/aks-subnet'

          - task: TerraformTaskV4@4
            displayName: 'Import Network Interface'
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'import'
              backendServiceArm: 'devOps-connection'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password" azurerm_network_interface.nic /subscriptions/488dbdc5-85c6-402d-811f-eb47d17f391f/resourceGroups/Azure-Netflix-Clone/providers/Microsoft.Network/networkInterfaces/vm1-nic'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'devOps-connection'
              commandOptions: '-var="admin_username=adminuser" -var="admin_password=$(admin_password)" -var="key_vault_name=$(key_vault_name)" -var="key_vault_rg=$(key_vault_rg)" -var="admin_username_secret=vm-admin-username" -var="admin_password_secret=vm-password"'
